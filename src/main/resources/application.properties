# ================================
# Configuración de Base de Datos
# ================================

# URL de conexión a la base de datos PostgreSQL, incluye el host, puerto y nombre de la base de datos
spring.datasource.url=jdbc:postgresql://localhost:5432/db

# Nombre de usuario para conectarse a la base de datos
spring.datasource.username=user

# Contraseña correspondiente al usuario de base de datos
spring.datasource.password=pass

# Dialecto de Hibernate específico para PostgreSQL. Ayuda a Hibernate a generar SQL compatible con PostgreSQL
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Define la estrategia de actualización del esquema de la base de datos:
# - update: actualiza automáticamente el esquema sin eliminar datos.
# - validate: valida que el esquema exista, pero no lo modifica.
# - create: crea el esquema en cada inicio (elimina los datos).
# - create-drop: crea el esquema al iniciar y lo elimina al detener la app.
spring.jpa.hibernate.ddl-auto=update

# Muestra las consultas SQL generadas por Hibernate en la consola, útil para debugging
spring.jpa.show-sql=true

# =====================================
# Configuración del Servidor de Spring
# =====================================

# Puerto en el que se ejecutará la aplicación Spring Boot
server.port=8081

# Ruta base del contexto de la aplicación. Todas las URLs del API comenzarán con /api
server.servlet.context-path=/api

# Optimización: evita el uso de metadatos JDBC que podrían causar problemas en algunas configuraciones
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

# Marvel API Keys
marvel.api.public.key=ec27418913128e765db8d752465d3ab3
marvel.api.private.key=3c8de64ac08554f4553a21fc36d845d0821ca641